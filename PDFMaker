// CAN DO NEXT:
  // GET THE DATE OF MONDAY IN A PLACE WHERE IT MAKES SENSE
  // MOMENT.JS?
  // IMPLEMENT BUILDING A FOLDER STRUCTURE IN A PLACE THAT MAKES SENSE

function onOpen(){
 var ui = SpreadsheetApp.getUi();
 ui.createMenu('PDF Maker')
  .addItem('Generate PDFs for Week','publishWeek')
  .addItem('Single Day', 'publishDay')
 .addSeparator()
      .addSubMenu(SpreadsheetApp.getUi().createMenu('Single Day')
          .addItem('Monday', 'Monday')
          .addItem('Tuesday', 'Tuesday')
          .addItem('Wednesday', 'Wednesday')
          .addItem('Thursday', 'Thursday')
          .addItem('Friday', 'Friday'))
 .addToUi();
}

function Monday(){
  publishDay("Monday");
}
function Tuesday(){
  publishDay("Tuesday");
}
function Wednesday(){
  publishDay("Wednesday");
}
function Thursday(){
  publishDay("Thursday");
}
function Friday(){
  publishDay("Friday");
}
  

function publishDay(day) {  
  var spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  SpreadsheetApp.setActiveSheet(spreadsheet.getSheetByName("School_Delivery"));
  var sheetWithDate = SpreadsheetApp.getActiveSheet();
  sheetWithDate.getRange('E2').setValue(day);
  var targetDate = sheetWithDate.getRange("E3").getValue();
  targetDate = Utilities.formatDate(targetDate, "GMT", "yyyy-MM-dd-EEEE");
  generatePdf(targetDate);  
}

function publishWeek() {
  
  options = {muteHttpExceptions: true};
  
  days = ["Monday","Tuesday","Wednesday","Thursday","Friday"]

  for (var i = 0; i < 5; i++) {
  
    var spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
    SpreadsheetApp.setActiveSheet(spreadsheet.getSheetByName("School_Delivery"));
    
    var sheetWithDate = SpreadsheetApp.getActiveSheet();
    sheetWithDate.getRange('E2').setValue(days[i]);
    var targetDate = sheetWithDate.getRange("E3").getValue();
    targetDate = Utilities.formatDate(targetDate, "GMT", "yyyy-MM-dd-EEEE");
    
    generatePdf(targetDate);
    
    if (i != 4) {
      Logger.log("Pausing for 17 seconds, to avoid 429 error while processing the whole week.  Don't worry about it, just click ok :-)");
      Utilities.sleep(17000)
    }
  }

    //function that saves a version of the whole file still in sheet form
    Browser.msgBox("all done, you can find your files in the target folder")


}

function generatePdf(targetDate) {
  
  sheetsToConvert = ["School_Delivery","COLD_Delivery","Prep"]
  
  for (var i = 0; i < 3; i++) {
  
    SpreadsheetApp.flush();    
    var ss = SpreadsheetApp.getActiveSpreadsheet();
    SpreadsheetApp.setActiveSheet(ss.getSheetByName(sheetsToConvert[i]));
    var sheet = ss.getActiveSheet();
    var sheetName = sheet.getName();
    
    //Date set with format in EST (NYC) used in subject and PDF name 
    var currentDate = "generated on " + Utilities.formatDate(new Date(), "GMT+5", "yyyy.MM.dd");
    var url = ss.getUrl();
    
    var folderID = "1vnSexVhPkCqJWhi3worsjHF2o28qBWkA"; // Folder id to save in a folder.
    var folder = DriveApp.getFolderById(folderID);
    
    //remove the trailing 'edit' from the url
    url = url.replace(/edit$/, '');
    
    //additional parameters for exporting the sheet as a pdf
    var url_ext = 'export?exportFormat=pdf&format=pdf' + //export as pdf
      //below parameters are optional...
      '&size=letter' + //paper size
      '&portrait=false' + //orientation, false for landscape
      '&fitw=true' + //fit to width, false for actual size
      '&sheetnames=true&printtitle=true&pagenumbers=true' + //hide optional headers and footers
      '&gridlines=false' + //hide gridlines
      '&fzr=false' + //do not repeat row headers (frozen rows) on each page
      '&gid=' + sheet.getSheetId(); //the sheet's Id
    
    var token = ScriptApp.getOAuthToken();
    
    var response = UrlFetchApp.fetch(url + url_ext, {headers: {'Authorization': 'Bearer ' + token}});
    
    var blob = response.getBlob().setName(nameFile(targetDate, sheetName));
    
    var newFile = folder.createFile(blob);
  }
  
  
  
}   
   
function popup() {
  Browser.msgBox("we're going to make a pdf");
}

function findBreakRows() {
  sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("School_Delivery");
  value = "Signature:";
  
  var dataRange = sheet.getDataRange();
  var values = dataRange.getValues();
  
  var rowsBeforeBreaks = [];
  
  for (var i = 0; i < values.length; i++) {
    for (var j = 0; j < values[i].length; j++) {     
      if (values[i][j] == value) {
        rowsBeforeBreaks.push((i+3)); //the +3 gets us the row two after the search term.  this works for the pages with signature, may need to be adjusted for others
      }
    }    
  }
  Logger.log("Rows that could be expanded to account for page breaks:  " + rowsBeforeBreaks)
  return rowsBeforeBreaks;
}

function nameFile(targetDate, sheetName) {
  var fileName = targetDate + "_" + sheetName + ".pdf";  
  Logger.log(fileName);
  return fileName;
  
  // CAN DO: 
    // This has to make fewer request in hope of not either
      // - Going over time, or
      // - Making too many requests
  // Pass arguments around instead of selecting active sheet?
  // Refactor this
}

function nameWeeklyFolder(mondayDate) {
  var spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  SpreadsheetApp.setActiveSheet(spreadsheet.getSheetByName("LunchMenu"));
  var sheetWithWeek = SpreadsheetApp.getActiveSheet();
  var cycleWeek = 'w' + sheetWithWeek.getRange('E1').getValue();
  targetDate = Utilities.formatDate(targetDate, "GMT", "yyyy-MM-dd-EEEE");
}

function createSubFolder(parentFolderID, childFolderName) {
  var folder = DriveApp.getFolderById(parentFolderID);
  var newFolder = folder.createFolder(childFolderName);
  return newFolder;
}

function createFolderStructure(){
  var PARENT_FOLDER_ID = '1vnSexVhPkCqJWhi3worsjHF2o28qBWkA'; // Change this to desired parent folder id
  var WEEK_FOLDER_NAME = "EXAMPLE WEEKLY FOLDERS: 2019 05 27 - w1"; // Call function to name Folder for whole week
  var weekFolder = createSubFolder(PARENT_FOLDER_ID, WEEK_FOLDER_NAME);  
  
  var ordersFolders = weekFolder.getFoldersByName("Orders");
  if(ordersFolders.hasNext()){
    var ordersFolder = ordersFolders.next()
  } else {
    var ordersFolder = weekFolder.createFolder("Orders")
    }
    var prepSheetsFolders = weekFolder.getFoldersByName("Prep Sheets");
  if(prepSheetsFolders.hasNext()){
    var prepSheets = prepSheets.next()
  } else {
    var prepSheets = weekFolder.createFolder("Prep Sheets")
    }
    var propelDeliveryFolders = weekFolder.getFoldersByName("Propel Delivery");
  if(propelDeliveryFolders.hasNext()){
    var propelDelivery = propelDelivery.next()
  } else {
    var propelDelivery = weekFolder.createFolder("Propel Delivery")
    }
   var uaecsDeliveryFolders = weekFolder.getFoldersByName("UAECS Delivery");
  if(uaecsDeliveryFolders.hasNext()){
    var uaecsDelivery = uaecsDelivery.next()
  } else {
    var uaecsDelivery = weekFolder.createFolder("UAECS Delivery") 
  
  }
}
